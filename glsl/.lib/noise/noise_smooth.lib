#ifndef LIB_NOISE_SMOOTH
#define LIB_NOISE_SMOOTH

//------------------------------------------------------------------------------
// SMOOTH GRADIENT TABLES
// Predefined gradient tables for noise generation
//------------------------------------------------------------------------------

vec2 noise_smooth(int hash, vec2 p) {
    const vec2 grad[4] = vec2[](
        vec2( 1.0,  1.0),
        vec2(-1.0,  1.0),
        vec2( 1.0, -1.0),
        vec2(-1.0, -1.0)
    );
    return grad[hash & 3];
}

vec3 noise_smooth(int hash, vec3 p) {
    const vec3 grad[12] = vec3[](
        vec3( 1.0,  1.0,  0.0),
        vec3(-1.0,  1.0,  0.0),
        vec3( 1.0, -1.0,  0.0),
        vec3(-1.0, -1.0,  0.0),
        vec3( 1.0,  0.0,  1.0),
        vec3(-1.0,  0.0,  1.0),
        vec3( 1.0,  0.0, -1.0),
        vec3(-1.0,  0.0, -1.0),
        vec3( 0.0,  1.0,  1.0),
        vec3( 0.0, -1.0,  1.0),
        vec3( 0.0,  1.0, -1.0),
        vec3( 0.0, -1.0, -1.0)
    );
    return grad[hash % 12];
}

vec4 noise_smooth(int hash, vec4 p) {
    const vec4 grad[32] = vec4[](
        vec4( 1.0,  1.0,  1.0,  0.0),
        vec4(-1.0,  1.0,  1.0,  0.0),
        vec4( 1.0, -1.0,  1.0,  0.0),
        vec4(-1.0, -1.0,  1.0,  0.0),
        vec4( 1.0,  1.0, -1.0,  0.0),
        vec4(-1.0,  1.0, -1.0,  0.0),
        vec4( 1.0, -1.0, -1.0,  0.0),
        vec4(-1.0, -1.0, -1.0,  0.0),
        vec4( 1.0,  1.0,  0.0,  1.0),
        vec4(-1.0,  1.0,  0.0,  1.0),
        vec4( 1.0, -1.0,  0.0,  1.0),
        vec4(-1.0, -1.0,  0.0,  1.0),
        vec4( 1.0,  0.0,  1.0,  1.0),
        vec4(-1.0,  0.0,  1.0,  1.0),
        vec4( 1.0,  0.0, -1.0,  1.0),
        vec4(-1.0,  0.0, -1.0,  1.0),
        vec4( 0.0,  1.0,  1.0,  1.0),
        vec4( 0.0, -1.0,  1.0,  1.0),
        vec4( 0.0,  1.0, -1.0,  1.0),
        vec4( 0.0, -1.0, -1.0,  1.0),
        vec4( 1.0,  1.0,  0.0, -1.0),
        vec4(-1.0,  1.0,  0.0, -1.0),
        vec4( 1.0, -1.0,  0.0, -1.0),
        vec4(-1.0, -1.0,  0.0, -1.0),
        vec4( 1.0,  0.0,  1.0, -1.0),
        vec4(-1.0,  0.0,  1.0, -1.0),
        vec4( 1.0,  0.0, -1.0, -1.0),
        vec4(-1.0,  0.0, -1.0, -1.0),
        vec4( 0.0,  1.0,  1.0, -1.0),
        vec4( 0.0, -1.0,  1.0, -1.0),
        vec4( 0.0,  1.0, -1.0, -1.0),
        vec4( 0.0, -1.0, -1.0, -1.0)
    );
    return grad[hash & 31];
}

#endif