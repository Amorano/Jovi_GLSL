#ifndef LIB_NOISE_FLOW
#define LIB_NOISE_FLOW

#include .lib/noise/noise_simplex.lib
#include .lib/noise/noise_params.lib

//------------------------------------------------------------------------------
// FLOW NOISE
//------------------------------------------------------------------------------

float noise_flow(vec2 p, float time, NoiseParams params) {
    float flowScale = params.frequency * 0.5; // Scale for flow vectors
    float flowSpeed = time * 0.5;            // Animation speed

    // Get base noise based on noiseType
    float getNoise(vec2 pos) {
        return params.noiseType == 0 ?
            noise_perlin(pos, params) :
            noise_simplex(pos, params);
    }

    // Generate flow vectors
    vec2 flow = vec2(
        getNoise(vec2(p.x * flowScale + flowSpeed, p.y * flowScale)),
        getNoise(vec2(p.x * flowScale + 40.0 + flowSpeed, p.y * flowScale + 40.0))
    );

    // Apply flow distortion
    return getNoise(p + flow * params.amplitude);
}

#endif